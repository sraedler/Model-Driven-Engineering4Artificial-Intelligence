@inproceedings{10.5555/2662593.2662595,
author = {Hastjarjanto, Tom and Jeuring, Johan and Leather, Sean},
title = {A DSL for Describing the Artificial Intelligence in Real-Time Video Games},
year = {2013},
isbn = {9781467362634},
publisher = {IEEE Press},
abstract = {Many games have computer-controlled agents that play against a player. The behavior of these computer-controlled agents is described by means of the artificial intelligence (AI) in the game. The AI is an important component of the game, and needs to be developed carefully, and adapted regularly. This paper introduces a novel language for describing the decision making process of the AI in real-time video games. We develop a declarative, domain-specific language (DSL) embedded in the functional programming language Haskell for real-time video games. We use the DSL to describe the AI of a prototype real-time video game.},
booktitle = {Proceedings of the 3rd International Workshop on Games and Software Engineering: Engineering Computer Games to Enable Positive, Progressive Change},
pages = {8–14},
numpages = {7},
location = {San Francisco, California},
series = {GAS '13}
}

@inproceedings{10.5555/2008503.2008556,
author = {Lortal, Ga\"{e}lle and Dhouib, Saadia and G\'{e}rard, S\'{e}bastien},
title = {Integrating Ontological Domain Knowledge into a Robotic DSL},
year = {2010},
isbn = {9783642212093},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
abstract = {Coming from the Artificial Intelligence (AI) and Semantic Web (SW) circles, ontologies are used mainly to represent domains. The Model Driven Engineering (MDE) field gave birth to Domain Specific Languages to represent a particular technical domain. Abstracting from their uses, we consider as many others researchers that ontologies and models are closer than their original fields could get to think. Furthermore, their building or development are facing the same problems. They are costly and need experts' interviews in order to grasp specific knowledge and structure it. Likewise, ontologies and DSL can benefit from each other domains in reusing construction methodologies and even reusing knowledge modelled in another format. In this paper we first present the ontologies and DSL definition we use and some methodologies of development enabling the reuse of knowledge (as alignment, fusion). We then present how we propose to reuse the knowledge of a robotic ontology to develop robotic DSLs within the PROTEUS project in order to inject readymade domain information to the DSL.},
booktitle = {Proceedings of the 2010 International Conference on Models in Software Engineering},
pages = {401–414},
numpages = {14},
location = {Oslo, Norway},
series = {MODELS'10}
}

